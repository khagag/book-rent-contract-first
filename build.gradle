plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.openapi.generator" version "7.8.0"
}

group = 'com.kmh'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/api/v1/api-contract.yml"
    outputDir = "$buildDir/generated-sources/openapi" // Temporary for generation
    apiPackage = "com.kmh.api.v1"
    modelPackage = "com.kmh.model.v1"
    configOptions = [
        dateLibrary: "java8",
        interfaceOnly: "true",  // Only generate interfaces
        skipDefaultInterface: "true",  // No default implementations
        useTags: "true",  // Organize by OpenAPI tags
        useOptional: "true"  // Use Optional in DTOs
    ]
    ignoreFileOverride = ".openapi-generator-ignore"  // Ignore unnecessary files
}

// Move only the necessary files to the correct src/main/java directory
task moveGeneratedFiles(type: Copy) {
    from("$buildDir/generated-sources/openapi/src/main/java/com/kmh")
    into("$projectDir/src/main/java/com/kmh/liberary")
}

// Ensure that the moveGeneratedFiles task runs after code generation
tasks.named("openApiGenerate") {
    finalizedBy("moveGeneratedFiles")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}
